# =============================================================================
# Brain_Net Environment Configuration
# =============================================================================
# Copy this file to .env and update the values according to your environment
# =============================================================================

#### BACKEND ####
# FastAPI Backend Configuration
BACKEND_HOST=0.0.0.0
BACKEND_PORT=8000
BACKEND_DEBUG=true
BACKEND_RELOAD=true

# Database Configuration
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/brain_net
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# Elasticsearch Configuration
ELASTICSEARCH_URL=http://localhost:9200
ELASTICSEARCH_INDEX_PREFIX=brain_net
ELASTICSEARCH_TIMEOUT=30

# Neo4j Configuration
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=password
NEO4J_DATABASE=neo4j

# MinIO Configuration
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_BUCKET_NAME=brain-net-documents
MINIO_SECURE=false

# Redis Configuration
REDIS_URL=redis://localhost:6379
REDIS_DB=0
REDIS_PASSWORD=
REDIS_TIMEOUT=5

# LangChain & AI Configuration
OPENAI_API_KEY=your_openai_api_key_here
ANTHROPIC_API_KEY=your_anthropic_api_key_here
HUGGINGFACE_API_TOKEN=your_huggingface_token_here
EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
LLM_MODEL=gpt-3.5-turbo
LLM_TEMPERATURE=0.7
MAX_TOKENS=2048

# LLM Service Configuration
LLM_SERVICE_URL=http://llm:8001
LLM_PORT=8001

#### SANDBOX ####
# Code Sandbox Service Configuration
SANDBOX_HOST=0.0.0.0
SANDBOX_PORT=8002
SANDBOX_DEBUG_MODE=true

# Sandbox Execution Configuration
EXECUTION_TIMEOUT=60
MAX_CONCURRENT_EXECUTIONS=10

# Sandbox Security Configuration
SANDBOX_SECURITY_LEVEL=medium
ALLOW_NETWORK_ACCESS=false
ALLOW_FILE_SYSTEM_ACCESS=false

# Sandbox Backend Communication
BACKEND_URL=http://backend:8000

# Document Processing
CHUNK_SIZE=1000
CHUNK_OVERLAP=200
MAX_FILE_SIZE=50MB
SUPPORTED_FORMATS=pdf,docx,txt,md,html,csv,json

# Query Generation
QUERY_GENERATION_MODEL=gpt-3.5-turbo
QUERIES_PER_DOCUMENT=5
QUERY_COMPLEXITY_LEVELS=simple,medium,complex

# Security
SECRET_KEY=your_very_secure_secret_key_at_least_32_characters_long_for_jwt_signing
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:80
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=*

#### FRONTEND ####
# Next.js Frontend Configuration
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws
NEXT_PUBLIC_APP_NAME=Brain_Net
NEXT_PUBLIC_APP_VERSION=1.0.0

# Frontend Port Configuration
FRONTEND_PORT=3000

# Frontend Environment
NODE_ENV=development
NEXT_PUBLIC_ENVIRONMENT=development

# Analytics & Monitoring
NEXT_PUBLIC_GOOGLE_ANALYTICS_ID=
NEXT_PUBLIC_SENTRY_DSN=

# Feature Flags
NEXT_PUBLIC_ENABLE_ANALYTICS=false
NEXT_PUBLIC_ENABLE_MONITORING=true
NEXT_PUBLIC_ENABLE_DEBUG=true

#### POSTGRESQL ####
# PostgreSQL Database Configuration
POSTGRES_DB=brain_net
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_SSLMODE=disable

# PostgreSQL Port Configuration
POSTGRES_EXTERNAL_PORT=5432

# Connection Pool
POSTGRES_MAX_CONNECTIONS=100
POSTGRES_SHARED_BUFFERS=256MB
POSTGRES_EFFECTIVE_CACHE_SIZE=1GB

#### ELASTICSEARCH ####
# Elasticsearch Configuration
ES_JAVA_OPTS="-Xms512m -Xmx512m"
ELASTIC_PASSWORD=
DISCOVERY_TYPE=single-node
XPACK_SECURITY_ENABLED=false
XPACK_MONITORING_COLLECTION_ENABLED=true

# Elasticsearch Port Configuration
ELASTICSEARCH_PORT=9200
ELASTICSEARCH_TRANSPORT_PORT=9300

#### NEO4J ####
# Neo4j Graph Database Configuration
NEO4J_AUTH=neo4j/password
NEO4J_PLUGINS=["apoc","graph-data-science"]
NEO4J_MEMORY_HEAP_INITIAL_SIZE=512m
NEO4J_MEMORY_HEAP_MAX_SIZE=1G
NEO4J_MEMORY_PAGECACHE_SIZE=512m

# Neo4j Port Configuration
NEO4J_HTTP_PORT=7474
NEO4J_BOLT_PORT=7687

#### MINIO ####
# MinIO Object Storage Configuration
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin
MINIO_BROWSER=on
MINIO_DOMAIN=localhost
MINIO_SERVER_URL=http://localhost:9000
MINIO_BROWSER_REDIRECT_URL=http://localhost:9001

# MinIO Port Configuration
MINIO_API_PORT=9000
MINIO_CONSOLE_PORT=9001

#### REDIS ####
# Redis Cache Configuration
REDIS_PASSWORD=
REDIS_MAXMEMORY=256mb
REDIS_MAXMEMORY_POLICY=allkeys-lru
REDIS_SAVE="900 1 300 10 60 10000"

# Redis Port Configuration
REDIS_PORT=6379
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# Nginx Port Configuration (Docker host ports)
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

#### PROMETHEUS ####
# Prometheus Monitoring Configuration
PROMETHEUS_RETENTION_TIME=200h
PROMETHEUS_SCRAPE_INTERVAL=15s
PROMETHEUS_EVALUATION_INTERVAL=15s
PROMETHEUS_EXTERNAL_URL=http://localhost:9090

# Prometheus Port Configuration
PROMETHEUS_PORT=9090

#### GRAFANA ####
# Grafana Dashboard Configuration
GF_SECURITY_ADMIN_USER=admin
GF_SECURITY_ADMIN_PASSWORD=admin
GF_SECURITY_SECRET_KEY=your_grafana_secret_key
GF_USERS_ALLOW_SIGN_UP=false
GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource

# Grafana Port Configuration
GRAFANA_PORT=3001

#### LOGSTASH ####
# Logstash Configuration
LS_JAVA_OPTS="-Xmx256m -Xms256m"
LOGSTASH_PIPELINE_WORKERS=2
LOGSTASH_PIPELINE_BATCH_SIZE=125
LOGSTASH_PIPELINE_BATCH_DELAY=50

# Logstash Port Configuration
LOGSTASH_BEATS_PORT=5044
LOGSTASH_TCP_PORT=5002
LOGSTASH_UDP_PORT=5003
LOGSTASH_HTTP_PORT=9600

#### KIBANA ####
# Kibana Configuration
ELASTICSEARCH_HOSTS=http://localhost:9200
KIBANA_SERVER_NAME=brain-net-kibana
KIBANA_SERVER_HOST="0.0.0.0"
KIBANA_ELASTICSEARCH_USERNAME=
KIBANA_ELASTICSEARCH_PASSWORD=

# Kibana Port Configuration
KIBANA_PORT=5601


#### OpenTelemetry ####
OTEL_GRPC_PORT=4319
OTEL_HTTP_PORT=4320

#### DOCKER ####
# Docker Compose Configuration
COMPOSE_PROJECT_NAME=brain_net
COMPOSE_FILE_PATH=docker/docker-compose.yml

# Docker Build
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1

#### MONITORING ####
# Application Monitoring
LOG_LEVEL=INFO
LOG_FORMAT=json
ENABLE_METRICS=true
ENABLE_TRACING=true
METRICS_PORT=8080

# Health Checks
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

#### DEVELOPMENT ####
# Development Configuration
DEV_MODE=true
HOT_RELOAD=true
DEBUG_SQL=false
DEBUG_ELASTICSEARCH=false
MOCK_AI_RESPONSES=false

# Testing
TEST_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/brain_net_test
TEST_ELASTICSEARCH_URL=http://localhost:9200
TEST_REDIS_URL=redis://localhost:6379/1

#### PRODUCTION ####
# Production Overrides (uncomment and modify for production)
# NODE_ENV=production
# BACKEND_DEBUG=false
# BACKEND_RELOAD=false
# NEXT_PUBLIC_ENVIRONMENT=p
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7
# LOG_LEVEL=WARN
# POSTGRES_SSLMODE=require
# XPACK_SECURITY_ENABLED=true
# MINIO_SECURE=true
# CORS_ORIGINS=https://yourdomain.com

#### BACKUP ####
# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=brain-net-backups
BACKUP_S3_REGION=us-east-1
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY= 

#### MIRRORS & REPOSITORIES ####
# Chinese Mirrors Configuration (uncomment to use)

### APT MIRRORS ###
# Debian/Ubuntu APT mirror for faster package downloads
# Common Chinese mirrors:
APT_MIRROR=mirrors.tuna.tsinghua.edu.cn/debian
# APT_MIRROR=mirrors.aliyun.com/debian
# APT_MIRROR=mirrors.ustc.edu.cn/debian
# APT_MIRROR=mirrors.163.com/debian

# APT Security mirror
APT_SECURITY_MIRROR=mirrors.tuna.tsinghua.edu.cn/debian-security
# APT_SECURITY_MIRROR=mirrors.aliyun.com/debian-security
# APT_SECURITY_MIRROR=mirrors.ustc.edu.cn/debian-security

### PYTHON INDEX URL ###
# PyPI mirror for faster Python package downloads
# Note: Use Aliyun as primary (more reliable), Tsinghua as backup
PYPI_INDEX_URL=https://mirrors.aliyun.com/pypi/simple/
PYPI_TRUSTED_HOST=mirrors.aliyun.com
# PYPI_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple
# PYPI_INDEX_URL=https://pypi.mirrors.ustc.edu.cn/simple/
# PYPI_INDEX_URL=https://pypi.douban.com/simple/

# PyPI trusted hosts (for non-HTTPS mirrors)

### NPM REGISTRY ###
# NPM registry mirror for faster Node.js package downloads
# Common Chinese mirrors:
NPM_REGISTRY=https://registry.npmmirror.com/
# NPM_REGISTRY=https://mirrors.cloud.tencent.com/npm/
# NPM_REGISTRY=https://mirrors.huaweicloud.com/repository/npm/
# NPM_REGISTRY=https://registry.npm.taobao.org


#### Conpact LLM ###### 
LANGSMITH_API_KEY=""
LANGSMITH_TRACING=true
LANGSMITH_ENDPOINT="https://api.smith.langchain.com"
LANGSMITH_PROJECT="doc_parsing"

DOC_CHUNKING_LLM_API_KEY="sk"
DOC_CHUNKING_LLM_BASE_URL="https://dashscope.aliyuncs.com/compatible-mode/v1"
DOC_CHUNKING_LLM_MODEL="qwen3-4b"


### Github Token - since this currectly rely on private project
GITHUB_TOKEN="...."